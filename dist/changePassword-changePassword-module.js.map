{"version":3,"sources":["webpack:///./src/app/layout/changePassword/changePassword-routing.module.ts","webpack:///./src/app/layout/changePassword/changePassword.component.html","webpack:///./src/app/layout/changePassword/changePassword.component.scss","webpack:///./src/app/layout/changePassword/changePassword.component.ts","webpack:///./src/app/layout/changePassword/changePassword.module.ts"],"names":[],"mappings":"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","file":"changePassword-changePassword-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './changePassword.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ChangePasswordComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ChangePasswordRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"changepassword-page\\\"> \\r\\n    <div class=\\\"form\\\">\\r\\n            <form  [formGroup]=\\\"changePasswordForm\\\">\\r\\n                    <div class=col-md-4 class=\\\"form-group\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\">\\r\\n                                <input matInput placeholder=\\\"Old Password\\\" formControlName=\\\"OldPassword\\\" [errorStateMatcher]=\\\"matcher\\\"  [type]=\\\"hide ? 'password':'text'\\\">\\r\\n                              </mat-form-field>\\r\\n                        </div>\\r\\n                <div class=col-md-4 class=\\\"form-group\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"New Password\\\" formControlName=\\\"Password\\\" [errorStateMatcher]=\\\"matcher\\\"  [type]=\\\"hide ? 'password':'text'\\\">\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n                <div class=col-md-6 class=\\\"form-group\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"ConfirmPassword\\\" [errorStateMatcher]=\\\"matcher\\\"  [type]=\\\"hide ? 'password':'text'\\\">\\r\\n                      </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" >\\r\\n                        <button style=\\\"margin: 10px; float: center;\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSave()\\\">Save</button>\\r\\n                        <a class=\\\"btn btn-link\\\" style=\\\"margin: 10px; float: center;\\\"mat-raised-button color=\\\"Cancel\\\" (click)=\\\"clearForm()\\\">Cancel</a>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"isMatched\\\">\\r\\n                        <span  style=\\\"color:red\\\">old password and new password can't be same</span>\\r\\n                      </div>\\r\\n            </form>\\r\\n    </div>\\r\\n       \\r\\n</div>\\r\\n\"","module.exports = \".changepassword-page {\\n  width: 500px;\\n  padding: 8% 0 0;\\n  margin: auto; }\\n\\n.form {\\n  position: relative;\\n  z-index: 1;\\n  background: #FFFFFF;\\n  max-width: 360px;\\n  margin: 0 auto 100px;\\n  padding: 45px;\\n  text-align: center;\\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NoYW5nZVBhc3N3b3JkL0Q6XFxMaWJyYXJ5QXBwX0FuZ3VsYXIvc3JjXFxhcHBcXGxheW91dFxcY2hhbmdlUGFzc3dvcmRcXGNoYW5nZVBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZLEVBQUE7O0FBRWQ7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsMEVBQTBFLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvY2hhbmdlUGFzc3dvcmQvY2hhbmdlUGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhbmdlcGFzc3dvcmQtcGFnZSB7XHJcbiAgICB3aWR0aDogNTAwcHg7XHJcbiAgICBwYWRkaW5nOiA4JSAwIDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG4gIC5mb3JtIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xyXG4gICAgbWF4LXdpZHRoOiAzNjBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvIDEwMHB4O1xyXG4gICAgcGFkZGluZzogNDVweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjIpLCAwIDVweCA1cHggMCByZ2JhKDAsIDAsIDAsIDAuMjQpO1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormGroupDirective, NgForm, FormControlName } from '@angular/forms';\r\nimport { MustMatch } from '../../Customvalidation/MustMatch';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../shared/services/user.service';\r\nimport { Login } from '../../model/login.model';\r\n\r\n@Component({\r\n    selector: 'app-changePassword',\r\n    templateUrl: './changePassword.component.html',\r\n    styleUrls: ['./changePassword.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n    // user:Login;\r\n    constructor( private formBuilder: FormBuilder, private router: Router, private userService: UserService) {}\r\n    changePasswordForm: FormGroup;\r\n    hide = true;\r\n    isMatched = false;\r\n    matcher = new MyErrorStateMatcher();\r\n    user;\r\n\r\n    ngOnInit() {\r\n        this.changePasswordForm = this.formBuilder.group({\r\n            OldPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n            Password: ['', [Validators.required, Validators.minLength(6)]],\r\n            ConfirmPassword: ['', Validators.required]\r\n              }, {\r\n                  validator: MustMatch('Password', 'ConfirmPassword')\r\n\r\n         });\r\n\r\n    }\r\n    onSave() {\r\n       if (this.changePasswordForm.value.OldPassword === this.changePasswordForm.value.Password) {\r\n        this.isMatched = true;\r\n       } else {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.user = {UserName: currentUser.UserName, OldPassword: this.changePasswordForm.value.OldPassword, Password: this.changePasswordForm.value.Password};\r\n        console.log(this.user);\r\n\r\n       this.userService.changePassword(this.user).subscribe(\r\n        details => {\r\n          if (details) {\r\n            window.confirm('Password Changed Successfully');\r\n            sessionStorage.removeItem('accessToken');\r\n            // localStorage.removeItem('accessToken');\r\n            localStorage.removeItem('currentUser');\r\n            this.router.navigate(['/login']);\r\n          }\r\n        },\r\n        error  => {\r\n        console.log('Error', error);\r\n        }\r\n      );\r\n     }\r\n    }\r\n\r\n    clearForm() {\r\n        this.changePasswordForm.setValue({\r\n            OldPassword: '',\r\n            Password: '',\r\n            ConfirmPassword : ''\r\n          });\r\n    }\r\n}\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n   const isSubmitted = form && form.submitted;\r\n   return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChangePasswordComponent } from './changePassword.component';\r\nimport { ChangePasswordRoutingModule } from './changePassword-routing.module';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule,MatInputModule,MatButtonModule} from '@angular/material';\r\nimport { UserService } from 'src/app/shared/services/user.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule,ChangePasswordRoutingModule,PageHeaderModule,FormsModule, ReactiveFormsModule, MatFormFieldModule,MatInputModule,MatButtonModule],\r\n    declarations: [ChangePasswordComponent],\r\n    providers: [UserService]\r\n})\r\nexport class ChangePasswordModule {}\r\n"],"sourceRoot":""}