{"version":3,"sources":["webpack:///./node_modules/ngx-mat-select-search/fesm5/ngx-mat-select-search.js","webpack:///./src/app/layout/createbook/createbook-routing.module.ts","webpack:///./src/app/layout/createbook/createbook.component.html","webpack:///./src/app/layout/createbook/createbook.component.scss","webpack:///./src/app/layout/createbook/createbook.component.ts","webpack:///./src/app/layout/createbook/createbook.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACa;AACjC;AACyB;AACwJ;AACvG;AAC1D;;AAE/C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAwB,GAAG,wBAAwB,GAAG,wBAAwB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAK,KAAK,gEAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,2DAAI;AACtB,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8BAA8B,uDAAC,qBAAqB,uDAAC;AACrD,8BAA8B,0DAAI,qBAAqB,0DAAI;AAC3D,+BAA+B,2DAAK;AACpC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,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","file":"createbook-createbook-module.js","sourcesContent":["import { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { A, Z, ZERO, NINE, SPACE } from '@angular/cdk/keycodes';\nimport { Subject } from 'rxjs';\nimport { delay, take, takeUntil } from 'rxjs/operators';\nimport { Directive, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, ViewChild, ContentChild, Optional, HostBinding, NgModule } from '@angular/core';\nimport { MatOption, MatSelect, MatButtonModule, MatInputModule, MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for providing a custom clear-icon.\n * e.g.\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\n * </ngx-mat-select-search>\n */\nvar MatSelectSearchClearDirective = /** @class */ (function () {\n    function MatSelectSearchClearDirective() {\n    }\n    MatSelectSearchClearDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngxMatSelectSearchClear]'\n                },] }\n    ];\n    return MatSelectSearchClearDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable:member-ordering component-selector */\n/**\n * Component providing an input field for searching MatSelect options.\n *\n * Example usage:\n *\n * interface Bank {\n *  id: string;\n *  name: string;\n * }\n *\n * \\@Component({\n *   selector: 'my-app-data-selection',\n *   template: `\n *     <mat-form-field>\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\n *         <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\n *           {{bank.name}}\n *         </mat-option>\n *       </mat-select>\n *     </mat-form-field>\n *   `\n * })\n * export class DataSelectionComponent implements OnInit, OnDestroy {\n *\n *   // control for the selected bank\n *   public bankCtrl: FormControl = new FormControl();\n *   // control for the MatSelect filter keyword\n *   public bankFilterCtrl: FormControl = new FormControl();\n *\n *   // list of banks\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\n *   // list of banks filtered by search keyword\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\n *\n *   // Subject that emits when the component has been destroyed.\n *   private _onDestroy = new Subject<void>();\n *\n *\n *   ngOnInit() {\n *     // load the initial bank list\n *     this.filteredBanks.next(this.banks.slice());\n *     // listen for search field value changes\n *     this.bankFilterCtrl.valueChanges\n *       .pipe(takeUntil(this._onDestroy))\n *       .subscribe(() => {\n *         this.filterBanks();\n *       });\n *   }\n *\n *   ngOnDestroy() {\n *     this._onDestroy.next();\n *     this._onDestroy.complete();\n *   }\n *\n *   private filterBanks() {\n *     if (!this.banks) {\n *       return;\n *     }\n *\n *     // get the search keyword\n *     let search = this.bankFilterCtrl.value;\n *     if (!search) {\n *       this.filteredBanks.next(this.banks.slice());\n *       return;\n *     } else {\n *       search = search.toLowerCase();\n *     }\n *\n *     // filter the banks\n *     this.filteredBanks.next(\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\n *     );\n *   }\n * }\n */\nvar MatSelectSearchComponent = /** @class */ (function () {\n    function MatSelectSearchComponent(matSelect, changeDetectorRef, matOption) {\n        if (matOption === void 0) { matOption = null; }\n        this.matSelect = matSelect;\n        this.changeDetectorRef = changeDetectorRef;\n        this.matOption = matOption;\n        /**\n         * Label of the search placeholder\n         */\n        this.placeholderLabel = 'Suche';\n        /**\n         * Label to be shown when no entries are found. Set to null if no message should be shown.\n         */\n        this.noEntriesFoundLabel = 'Keine Optionen gefunden';\n        /**\n         * Whether or not the search field should be cleared after the dropdown menu is closed.\n         * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\n         */\n        this.clearSearchInput = true;\n        /**\n         * Disables initial focusing of the input field\n         */\n        this.disableInitialFocus = false;\n        this.onChange = function (_) { };\n        this.onTouched = function (_) { };\n        /**\n         * Whether the backdrop class has been set\n         */\n        this.overlayClassSet = false;\n        /**\n         * Event that emits when the current value changes\n         */\n        this.change = new EventEmitter();\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n    }\n    Object.defineProperty(MatSelectSearchComponent.prototype, \"isInsideMatOption\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this.matOption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelectSearchComponent.prototype, \"value\", {\n        /** Current search value */\n        get: /**\n         * Current search value\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // set custom panel class\n        /** @type {?} */\n        var panelClass = 'mat-select-search-panel';\n        if (this.matSelect.panelClass) {\n            if (Array.isArray(this.matSelect.panelClass)) {\n                this.matSelect.panelClass.push(panelClass);\n            }\n            else if (typeof this.matSelect.panelClass === 'string') {\n                this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];\n            }\n            else if (typeof this.matSelect.panelClass === 'object') {\n                this.matSelect.panelClass[panelClass] = true;\n            }\n        }\n        else {\n            this.matSelect.panelClass = panelClass;\n        }\n        // set custom mat-option class if the component was placed inside a mat-option\n        if (this.matOption) {\n            this.matOption.disabled = true;\n            this.matOption._getHostElement().classList.add('contains-mat-select-search');\n        }\n        // when the select dropdown panel is opened or closed\n        this.matSelect.openedChange\n            .pipe(delay(1), takeUntil(this._onDestroy))\n            .subscribe(function (opened) {\n            if (opened) {\n                // focus the search field when opening\n                _this.getWidth();\n                if (!_this.disableInitialFocus) {\n                    _this._focus();\n                }\n            }\n            else {\n                // clear it when closing\n                if (_this.clearSearchInput) {\n                    _this._reset();\n                }\n            }\n        });\n        // set the first item active after the options changed\n        this.matSelect.openedChange\n            .pipe(take(1))\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(function () {\n            _this._options = _this.matSelect.options;\n            _this._options.changes\n                .pipe(takeUntil(_this._onDestroy))\n                .subscribe(function () {\n                /** @type {?} */\n                var keyManager = _this.matSelect._keyManager;\n                if (keyManager && _this.matSelect.panelOpen) {\n                    // avoid \"expression has been changed\" error\n                    setTimeout(function () {\n                        // set first item active and input width\n                        keyManager.setFirstItemActive();\n                        _this.getWidth();\n                        // set no entries found class on mat option\n                        if (_this.matOption) {\n                            if (_this._noEntriesFound()) {\n                                _this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\n                            }\n                            else {\n                                _this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\n                            }\n                        }\n                    }, 1);\n                }\n            });\n        });\n        // detect changes when the input changes\n        this.change\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(function () {\n            _this.changeDetectorRef.detectChanges();\n        });\n        this.initMultipleHandling();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.setOverlayClass();\n        // update view when available options change\n        this.matSelect.openedChange\n            .pipe(take(1), takeUntil(this._onDestroy)).subscribe(function () {\n            _this.matSelect.options.changes\n                .pipe(takeUntil(_this._onDestroy))\n                .subscribe(function () {\n                _this.changeDetectorRef.markForCheck();\n            });\n        });\n    };\n    /**\n     * Handles the key down event with MatSelect.\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n     * @param event\n     */\n    /**\n     * Handles the key down event with MatSelect.\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype._handleKeydown = /**\n     * Handles the key down event with MatSelect.\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // Prevent propagation for all alphanumeric characters in order to avoid selection issues\n        if ((event.key && event.key.length === 1) ||\n            (event.keyCode >= A && event.keyCode <= Z) ||\n            (event.keyCode >= ZERO && event.keyCode <= NINE) ||\n            (event.keyCode === SPACE)) {\n            event.stopPropagation();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var valueChanged = value !== this._value;\n        if (valueChanged) {\n            this._value = value;\n            this.change.emit(value);\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.onInputChange = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var valueChanged = value !== this._value;\n        if (valueChanged) {\n            this.initMultiSelectedValues();\n            this._value = value;\n            this.onChange(value);\n            this.change.emit(value);\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.onBlur = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.writeValue(value);\n        this.onTouched();\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Focuses the search input field\n     */\n    /**\n     * Focuses the search input field\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype._focus = /**\n     * Focuses the search input field\n     * @return {?}\n     */\n    function () {\n        if (!this.searchSelectInput || !this.matSelect.panel) {\n            return;\n        }\n        // save and restore scrollTop of panel, since it will be reset by focus()\n        // note: this is hacky\n        /** @type {?} */\n        var panel = this.matSelect.panel.nativeElement;\n        /** @type {?} */\n        var scrollTop = panel.scrollTop;\n        // focus\n        this.searchSelectInput.nativeElement.focus();\n        panel.scrollTop = scrollTop;\n    };\n    /**\n     * Resets the current search value\n     * @param focus whether to focus after resetting\n     */\n    /**\n     * Resets the current search value\n     * @param {?=} focus whether to focus after resetting\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype._reset = /**\n     * Resets the current search value\n     * @param {?=} focus whether to focus after resetting\n     * @return {?}\n     */\n    function (focus) {\n        if (!this.searchSelectInput) {\n            return;\n        }\n        this.searchSelectInput.nativeElement.value = '';\n        this.onInputChange('');\n        if (focus) {\n            this._focus();\n        }\n    };\n    /**\n     * Sets the overlay class  to correct offsetY\n     * so that the selected option is at the position of the select box when opening\n     */\n    /**\n     * Sets the overlay class  to correct offsetY\n     * so that the selected option is at the position of the select box when opening\n     * @private\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.setOverlayClass = /**\n     * Sets the overlay class  to correct offsetY\n     * so that the selected option is at the position of the select box when opening\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.overlayClassSet) {\n            return;\n        }\n        /** @type {?} */\n        var overlayClasses = ['cdk-overlay-pane-select-search'];\n        if (!this.matOption) {\n            // add offset to panel if component is not placed inside mat-option\n            overlayClasses.push('cdk-overlay-pane-select-search-with-offset');\n        }\n        this.matSelect.overlayDir.attach\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(function () {\n            // note: this is hacky, but currently there is no better way to do this\n            /** @type {?} */\n            var element = _this.searchSelectInput.nativeElement;\n            /** @type {?} */\n            var overlayElement;\n            while (element = element.parentElement) {\n                if (element.classList.contains('cdk-overlay-pane')) {\n                    overlayElement = element;\n                    break;\n                }\n            }\n            if (overlayElement) {\n                overlayClasses.forEach(function (overlayClass) {\n                    overlayElement.classList.add(overlayClass);\n                });\n            }\n        });\n        this.overlayClassSet = true;\n    };\n    /**\n     * Initializes handling <mat-select [multiple]=\"true\">\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n     */\n    /**\n     * Initializes handling <mat-select [multiple]=\"true\">\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n     * @private\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.initMultipleHandling = /**\n     * Initializes handling <mat-select [multiple]=\"true\">\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // if <mat-select [multiple]=\"true\">\n        // store previously selected values and restore them when they are deselected\n        // because the option is not available while we are currently filtering\n        this.matSelect.valueChange\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(function (values) {\n            if (_this.matSelect.multiple) {\n                /** @type {?} */\n                var restoreSelectedValues_1 = false;\n                if (_this._value && _this._value.length\n                    && _this.previousSelectedValues && Array.isArray(_this.previousSelectedValues)) {\n                    if (!values || !Array.isArray(values)) {\n                        values = [];\n                    }\n                    /** @type {?} */\n                    var optionValues_1 = _this.matSelect.options.map(function (option) { return option.value; });\n                    _this.previousSelectedValues.forEach(function (previousValue) {\n                        if (values.indexOf(previousValue) === -1 && optionValues_1.indexOf(previousValue) === -1) {\n                            // if a value that was selected before is deselected and not found in the options, it was deselected\n                            // due to the filtering, so we restore it.\n                            values.push(previousValue);\n                            restoreSelectedValues_1 = true;\n                        }\n                    });\n                }\n                if (restoreSelectedValues_1) {\n                    _this.matSelect._onChange(values);\n                }\n                _this.previousSelectedValues = values;\n            }\n        });\n    };\n    /**\n     *  Set the width of the innerSelectSearch to fit even custom scrollbars\n     *  And support all Operation Systems\n     */\n    /**\n     *  Set the width of the innerSelectSearch to fit even custom scrollbars\n     *  And support all Operation Systems\n     * @private\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.getWidth = /**\n     *  Set the width of the innerSelectSearch to fit even custom scrollbars\n     *  And support all Operation Systems\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\n            return;\n        }\n        /** @type {?} */\n        var element = this.innerSelectSearch.nativeElement;\n        /** @type {?} */\n        var panelElement;\n        while (element = element.parentElement) {\n            if (element.classList.contains('mat-select-panel')) {\n                panelElement = element;\n                break;\n            }\n        }\n        if (panelElement) {\n            this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\n        }\n    };\n    /**\n     *  Initialize this.previousSelectedValues once the first filtering occurs.\n     */\n    /**\n     *  Initialize this.previousSelectedValues once the first filtering occurs.\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype.initMultiSelectedValues = /**\n     *  Initialize this.previousSelectedValues once the first filtering occurs.\n     * @return {?}\n     */\n    function () {\n        if (this.matSelect.multiple && !this._value) {\n            this.previousSelectedValues = this.matSelect.options\n                .filter(function (option) { return option.selected; })\n                .map(function (option) { return option.value; });\n        }\n    };\n    /**\n     * Returns whether the \"no entries found\" message should be displayed\n     */\n    /**\n     * Returns whether the \"no entries found\" message should be displayed\n     * @return {?}\n     */\n    MatSelectSearchComponent.prototype._noEntriesFound = /**\n     * Returns whether the \"no entries found\" message should be displayed\n     * @return {?}\n     */\n    function () {\n        if (!this._options) {\n            return;\n        }\n        if (this.matOption) {\n            return this.noEntriesFoundLabel && this.value && this._options.length === 1;\n        }\n        else {\n            return this.noEntriesFoundLabel && this.value && this._options.length === 0;\n        }\n    };\n    MatSelectSearchComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-mat-select-search',\n                    template: \"<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\n\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\n<div\\n      #innerSelectSearch\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\n      [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple}\\\">\\n  <input matInput\\n         class=\\\"mat-select-search-input\\\"\\n         autocomplete=\\\"off\\\"\\n         #searchSelectInput\\n         (keydown)=\\\"_handleKeydown($event)\\\"\\n         (input)=\\\"onInputChange($event.target.value)\\\"\\n         (blur)=\\\"onBlur($event.target.value)\\\"\\n         [placeholder]=\\\"placeholderLabel\\\"\\n  />\\n  <button mat-button *ngIf=\\\"value\\\"\\n          mat-icon-button\\n          aria-label=\\\"Clear\\\"\\n          (click)=\\\"_reset(true)\\\"\\n          class=\\\"mat-select-search-clear\\\">\\n    <ng-content *ngIf=\\\"clearIcon; else defaultIcon\\\" select=\\\"[ngxMatSelectSearchClear]\\\"></ng-content>\\n    <ng-template #defaultIcon>\\n      <mat-icon>close</mat-icon>\\n    </ng-template>\\n  </button>\\n</div>\\n\\n<div *ngIf=\\\"_noEntriesFound()\\\"\\n     class=\\\"mat-select-search-no-entries-found\\\">\\n  {{noEntriesFoundLabel}}\\n</div>\\n<!--\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\n\\nUse of this source code is governed by an MIT-style license that can be\\nfound in the LICENSE file at https://angular.io/license\\n-->\\n\",\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(function () { return MatSelectSearchComponent; }),\n                            multi: true\n                        }\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;width:100%;border-bottom-width:1px;border-bottom-style:solid;z-index:100;font-size:inherit;box-shadow:none;border-radius:0;-webkit-transform:translate3d(0,0,0)}.mat-select-search-inner.mat-select-search-inner-multiple{width:100%}/deep/ .mat-select-search-panel{-webkit-transform:none!important;transform:none!important;overflow-x:hidden}.mat-select-search-input{padding:16px 36px 16px 16px;box-sizing:border-box}.mat-select-search-no-entries-found{padding:16px}.mat-select-search-clear{position:absolute;right:4px;top:5px}:host.mat-select-search-inside-mat-option .mat-select-search-input{padding-top:0;padding-bottom:0;height:3em;line-height:3em}:host.mat-select-search-inside-mat-option .mat-select-search-clear{top:3px}/deep/ .cdk-overlay-pane-select-search.cdk-overlay-pane-select-search-with-offset{margin-top:-50px}/deep/ .mat-option[aria-disabled=true].contains-mat-select-search{position:static;padding:0}/deep/ .mat-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0}/deep/ .mat-option[aria-disabled=true].contains-mat-select-search .mat-option-pseudo-checkbox{display:none}/deep/ .mat-option[aria-disabled=true].contains-mat-select-search.mat-select-search-no-entries-found{height:6em}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatSelectSearchComponent.ctorParameters = function () { return [\n        { type: MatSelect, decorators: [{ type: Inject, args: [MatSelect,] }] },\n        { type: ChangeDetectorRef },\n        { type: MatOption, decorators: [{ type: Optional }, { type: Inject, args: [MatOption,] }] }\n    ]; };\n    MatSelectSearchComponent.propDecorators = {\n        placeholderLabel: [{ type: Input }],\n        noEntriesFoundLabel: [{ type: Input }],\n        clearSearchInput: [{ type: Input }],\n        disableInitialFocus: [{ type: Input }],\n        searchSelectInput: [{ type: ViewChild, args: ['searchSelectInput', { read: ElementRef },] }],\n        innerSelectSearch: [{ type: ViewChild, args: ['innerSelectSearch', { read: ElementRef },] }],\n        clearIcon: [{ type: ContentChild, args: [MatSelectSearchClearDirective,] }],\n        isInsideMatOption: [{ type: HostBinding, args: ['class.mat-select-search-inside-mat-option',] }]\n    };\n    return MatSelectSearchComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar MatSelectSearchVersion = '1.5.0';\nvar NgxMatSelectSearchModule = /** @class */ (function () {\n    function NgxMatSelectSearchModule() {\n    }\n    NgxMatSelectSearchModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        MatIconModule,\n                        MatInputModule\n                    ],\n                    declarations: [\n                        MatSelectSearchComponent,\n                        MatSelectSearchClearDirective\n                    ],\n                    exports: [\n                        MatSelectSearchComponent,\n                        MatSelectSearchClearDirective\n                    ]\n                },] }\n    ];\n    return NgxMatSelectSearchModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatSelectSearchComponent, MatSelectSearchVersion, NgxMatSelectSearchModule, MatSelectSearchClearDirective as ɵa };\n\n//# sourceMappingURL=ngx-mat-select-search.js.map","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateBookComponent } from './createbook.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: CreateBookComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CreatBookRoutingModule {\r\n}\r\n","module.exports = \"<div>\\r\\n  <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"defaultInline1\\\" name=\\\"Books\\\" value=\\\"\\\" (click)=\\\"AddNew()\\\"\\r\\n      checked=\\\"checked\\\">\\r\\n    <label class=\\\"custom-control-label\\\" for=\\\"defaultInline1\\\">Add New</label>\\r\\n  </div>\\r\\n  <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n    <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"defaultInline2\\\" name=\\\"Books\\\" (click)=\\\"AddExisting()\\\">\\r\\n    <label class=\\\"custom-control-label\\\" for=\\\"defaultInline2\\\">Add Existing</label>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- New book form -->\\r\\n<div *ngIf=\\\"isNewBookAdded\\\" class=\\\"login-page\\\">\\r\\n  <div class=\\\"form\\\">\\r\\n    <form [formGroup]=\\\"CreateNewBook\\\" (submit)=\\\"onSubmit(Image)\\\" class=\\\"form-inline\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" >\\r\\n            <input matInput placeholder=\\\"Book Name\\\" formControlName=\\\"Name\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <ng-container formArrayName=\\\"ISBNNumber\\\">\\r\\n          <ng-container formGroupName=\\\"0\\\">\\r\\n            <div class=col-md-4>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"ISBN Number\\\" formControlName=\\\"TrackNo\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=col-md-4>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Edition\\\" formControlName=\\\"Edition\\\">\\r\\n              </mat-form-field>\\r\\n    \\r\\n            </div>\\r\\n            <div class=col-md-4>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Author\\\" formControlName=\\\"Author\\\">\\r\\n              </mat-form-field>\\r\\n   \\r\\n            </div>\\r\\n            <div class=col-md-4>\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Publish Year\\\" formControlName=\\\"PublishingYear\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #picker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Description\\\" formControlName=\\\"Description\\\">\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <div class=\\\"formGroup\\\">\\r\\n                <input type=\\\"file\\\" #Image accept=\\\"image/*\\\" (change)=\\\"uploadImage($event)\\\" id=image formControlName=\\\"Image\\\">\\r\\n                <img [src]=\\\"url\\\" height=\\\"100\\\" *ngIf=\\\"isImageUploaded\\\"  style=\\\"margin:10px\\\"> <br />\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 10px; float:right\\\">Add</button>\\r\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\" style=\\\"margin: 10px; float:right\\\">cancel</button>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!-- style= \\\"display:inline-block;\\\" -->\\r\\n<div *ngIf=\\\"isIncreasedBooks\\\" class=\\\"login-page\\\">\\r\\n  <div class=\\\"form\\\">\\r\\n    <form [formGroup]=\\\"AddToExistingBooks\\\" (submit)=\\\"onExistingSubmit()\\\" class=\\\"form-inline\\\">\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"form-group\\\" class=\\\"col-md-4\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Select any...\\\" [(value)]=\\\"selectedBook\\\" [formControl]=\\\"bankCtrl\\\">\\r\\n                  <div>\\r\\n                    <mat-option>\\r\\n                      <ngx-mat-select-search [formControl]=\\\"bankFilterCtrl\\\"></ngx-mat-select-search>\\r\\n                    </mat-option>\\r\\n                    <mat-option *ngFor=\\\"let book of filteredBanks | async\\\" [value]=\\\"book.Id\\\">\\r\\n                      <img with=\\\"40\\\" height=\\\"40\\\" src=\\\"{{book.Image}}\\\">\\r\\n                      {{book.Name}}\\r\\n                    </mat-option>\\r\\n                  </div>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n              <ng-container formArrayName=\\\"ISBNNumber\\\">\\r\\n                <ng-container formGroupName=\\\"0\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"ISBN Number\\\" formControlName=\\\"TrackNo\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=col-md-4>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"Edition\\\" formControlName=\\\"Edition\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=col-md-4>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"Description\\\" formControlName=\\\"Description\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=col-md-4>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput placeholder=\\\"Author\\\" formControlName=\\\"Author\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=col-md-4>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                      <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Publish Year\\\" formControlName=\\\"PublishingYear\\\">\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #picker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"formGroup\\\">\\r\\n                      <input type=\\\"file\\\" #Image accept=\\\"image/*\\\" (change)=\\\"uploadImage($event)\\\" id=image>\\r\\n                      <img [src]=\\\"url\\\" height=\\\"100\\\" *ngIf=\\\"isImageUploaded\\\" style=\\\"margin:10px\\\"> <br />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </ng-container>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 10px; float: right;\\\">Add</button>\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\" style=\\\"margin: 10px; float: right;\\\">cancel</button>\\r\\n            </div>\\r\\n      </div>\\r\\n     \\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Roboto:300);\\n.login-page {\\n  width: 900px;\\n  padding: 5% 0 0;\\n  margin: auto; }\\n.form {\\n  position: relative;\\n  z-index: 1;\\n  background: #FFFFFF;\\n  max-width: 700px;\\n  margin: 0 auto 100px;\\n  padding: 45px;\\n  text-align: center;\\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); }\\n.form .message {\\n  margin: 15px 0 0;\\n  color: #b3b3b3;\\n  font-size: 12px; }\\n.form .message a {\\n  color: #4CAF50;\\n  text-decoration: none; }\\n.container {\\n  position: relative;\\n  z-index: 1;\\n  max-width: 300px;\\n  margin: 0 auto; }\\n.container:before, .container:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both; }\\n.container .info {\\n  margin: 50px auto;\\n  text-align: center; }\\n.container .info h1 {\\n  margin: 0 0 15px;\\n  padding: 0;\\n  font-size: 36px;\\n  font-weight: 300;\\n  color: #1a1a1a; }\\n.container .info span {\\n  color: #4d4d4d;\\n  font-size: 12px; }\\n.container .info span a {\\n  color: #000000;\\n  text-decoration: none; }\\n.container .info span .fa {\\n  color: #EF3B3A; }\\n.form-group {\\n  padding: 10px; }\\nbody {\\n  background: #76b852;\\n  /* fallback for old browsers */\\n  background: linear-gradient(to left, #76b852, #8DC26F);\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n.userid {\\n  margin-left: 15% !important; }\\n.optionStyle {\\n  -webkit-transform: translateX(-5px) translateY(28px) !important;\\n          transform: translateX(-5px) translateY(28px) !important; }\\n#image {\\n  width: 100%;\\n  border: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2NyZWF0ZWJvb2svRDpcXExpYnJhcnlBcHBfQW5ndWxhci9zcmNcXGFwcFxcbGF5b3V0XFxjcmVhdGVib29rXFxjcmVhdGVib29rLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEQSwrREFBWTtBQUdaO0VBQ0UsWUFBWTtFQUNaLGVBQWU7RUFDZixZQUFZLEVBQUE7QUFFZDtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwwRUFBMEUsRUFBQTtBQUU1RTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsZUFBZSxFQUFBO0FBRWpCO0VBQ0UsY0FBYztFQUNkLHFCQUFxQixFQUFBO0FBRXZCO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixnQkFBZ0I7RUFDaEIsY0FBYyxFQUFBO0FBRWhCO0VBQ0UsV0FBVztFQUNYLGNBQWM7RUFDZCxXQUFXLEVBQUE7QUFFYjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0IsRUFBQTtBQUVwQjtFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixjQUFjLEVBQUE7QUFFaEI7RUFDRSxjQUFjO0VBQ2QsZUFBZSxFQUFBO0FBRWpCO0VBQ0UsY0FBYztFQUNkLHFCQUFxQixFQUFBO0FBRXZCO0VBQ0UsY0FBYyxFQUFBO0FBRWhCO0VBQ0UsYUFBYSxFQUFBO0FBTWY7RUFDRSxtQkFBbUI7RUFBRSw4QkFBQTtFQUlyQixzREFBc0Q7RUFDdEQsaUNBQWlDO0VBQ2pDLG1DQUFtQztFQUNuQyxrQ0FBa0MsRUFBQTtBQUVwQztFQUVJLDJCQUEyQixFQUFBO0FBRy9CO0VBRUksK0RBQXVEO1VBQXZELHVEQUF1RCxFQUFBO0FBRTNEO0VBRUUsV0FBVztFQUNYLFlBQ0YsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jcmVhdGVib29rL2NyZWF0ZWJvb2suY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAjYm9va3NEYXRhXHJcbi8vIHtcclxuLy8gICAgIHBhZGRpbmc6IDMwcHhcclxuLy8gfVxyXG5cclxuLy8gICAqIHtib3gtc2l6aW5nOiBib3JkZXItYm94O31cclxuXHJcbi8vIC5mb3JtLWlubGluZSB7ICBcclxuLy8gICBkaXNwbGF5OiBmbGV4O1xyXG4vLyAgIGZsZXgtZmxvdzogcm93IHdyYXA7XHJcbi8vICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuLy8gfVxyXG5cclxuLy8gLmZvcm0taW5saW5lIGxhYmVsIHtcclxuLy8gICBtYXJnaW46IDVweCAxMHB4IDVweCAwO1xyXG4vLyB9XHJcblxyXG4vLyAuZm9ybS1pbmxpbmUgaW5wdXQge1xyXG4vLyAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbi8vICAgbWFyZ2luOiA1cHggMTBweCA1cHggMDtcclxuLy8gICBwYWRkaW5nOiAxMHB4O1xyXG4vLyAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbi8vICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuLy8gfVxyXG4vLyAjb3B0aW9uc1xyXG4vLyB7XHJcbi8vICAgbWFyZ2luLXRvcDogNTBweFxyXG4vLyB9XHJcbi8vIC8qIC5mb3JtLWlubGluZSBidXR0b24ge1xyXG4vLyAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiBkb2RnZXJibHVlO1xyXG4vLyAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbi8vICAgY29sb3I6IHdoaXRlO1xyXG4vLyAgIGN1cnNvcjogcG9pbnRlcjtcclxuLy8gfVxyXG5cclxuLy8gLmZvcm0taW5saW5lIGJ1dHRvbjpob3ZlciB7XHJcbi8vICAgYmFja2dyb3VuZC1jb2xvcjogcm95YWxibHVlO1xyXG4vLyB9ICovXHJcbi8vIHNlbGVjdC5mb3JtLWNvbnRyb2wge1xyXG4vLyAgICAgd2lkdGg6IDEwMCU7XHJcbi8vIH1cclxuLy8gI2ltYWdlXHJcbi8vIHtcclxuLy8gICB3aWR0aDogMTAwJTtcclxuLy8gICBib3JkZXI6IG5vbmVcclxuLy8gfVxyXG5cclxuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bzozMDApO1xyXG4vLyBAaW1wb3J0IHVybChodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjQuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MpO1xyXG5cclxuLmxvZ2luLXBhZ2Uge1xyXG4gIHdpZHRoOiA5MDBweDtcclxuICBwYWRkaW5nOiA1JSAwIDA7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbi5mb3JtIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgei1pbmRleDogMTtcclxuICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xyXG4gIG1heC13aWR0aDogNzAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG8gMTAwcHg7XHJcbiAgcGFkZGluZzogNDVweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm94LXNoYWRvdzogMCAwIDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgNXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNCk7XHJcbn1cclxuLmZvcm0gLm1lc3NhZ2Uge1xyXG4gIG1hcmdpbjogMTVweCAwIDA7XHJcbiAgY29sb3I6ICNiM2IzYjM7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcbi5mb3JtIC5tZXNzYWdlIGEge1xyXG4gIGNvbG9yOiAjNENBRjUwO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgei1pbmRleDogMTtcclxuICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcbi5jb250YWluZXI6YmVmb3JlLCAuY29udGFpbmVyOmFmdGVyIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcbi5jb250YWluZXIgLmluZm8ge1xyXG4gIG1hcmdpbjogNTBweCBhdXRvO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uY29udGFpbmVyIC5pbmZvIGgxIHtcclxuICBtYXJnaW46IDAgMCAxNXB4O1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgZm9udC1zaXplOiAzNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgY29sb3I6ICMxYTFhMWE7XHJcbn1cclxuLmNvbnRhaW5lciAuaW5mbyBzcGFuIHtcclxuICBjb2xvcjogIzRkNGQ0ZDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuLmNvbnRhaW5lciAuaW5mbyBzcGFuIGEge1xyXG4gIGNvbG9yOiAjMDAwMDAwO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4uY29udGFpbmVyIC5pbmZvIHNwYW4gLmZhIHtcclxuICBjb2xvcjogI0VGM0IzQTtcclxufVxyXG4uZm9ybS1ncm91cHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcbi8vIC5mb3JtIGEgOmhvdmVye1xyXG4vLyAgIGNvbG9yOnJlZDtcclxuICBcclxuLy8gfVxyXG5ib2R5IHtcclxuICBiYWNrZ3JvdW5kOiAjNzZiODUyOyAvKiBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzICovXHJcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQocmlnaHQsICM3NmI4NTIsICM4REMyNkYpO1xyXG4gIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHJpZ2h0LCAjNzZiODUyLCAjOERDMjZGKTtcclxuICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQocmlnaHQsICM3NmI4NTIsICM4REMyNkYpO1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCAjNzZiODUyLCAjOERDMjZGKTtcclxuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcclxuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xyXG59XHJcbi51c2VyaWRcclxue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE1JSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG4ub3B0aW9uU3R5bGVcclxue1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpIHRyYW5zbGF0ZVkoMjhweCkgIWltcG9ydGFudDtcclxufVxyXG4jaW1hZ2Vcclxue1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogbm9uZVxyXG59XHJcblxyXG4iXX0= */\"","import { routerTransition } from '../../router.animations';\r\nimport { Component, OnInit, ViewChild, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { BookService} from '../../shared/services/book.service';\r\nimport { Book} from '../../model/book.model';\r\nimport { Isbn} from '../../model/isbn.model';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\nimport { MatSelect } from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector: 'app-tables',\r\n    templateUrl: './createbook.component.html',\r\n    styleUrls: ['./createbook.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class CreateBookComponent implements OnInit, AfterViewInit, OnDestroy {\r\nsubmit = false;\r\nisNewBookAdded = true;\r\nisIncreasedBooks = false;\r\nisImageUploaded = false;\r\nCreateNewBook: FormGroup;\r\nAddToExistingBooks: FormGroup;\r\nbooks: Book[] = [];\r\nISBN: FormGroup;\r\nurl: any;\r\nerrorMessage: string;\r\nfileToUpload: File = null;\r\nimageUrl: string;\r\n\r\nstopSubmitOnClose = false;\r\npublic bankCtrl: FormControl = new FormControl();\r\npublic bankFilterCtrl: FormControl = new FormControl();\r\nprotected _onDestroy = new Subject<void>();\r\npublic filteredBanks: ReplaySubject<Book[]> = new ReplaySubject<Book[]>(1);\r\n@ViewChild('singleSelect') singleSelect: MatSelect;\r\nselectedBook: any;\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private bookService: BookService) { }\r\n\r\ngetBookData() {\r\n  const elementId = [];\r\n  this.bookService.getBooks().subscribe(\r\n    booklist => {\r\n    //   this.books = booklist.filter(el => {\r\n    //     if (elementId.indexOf(el.Id) === -1) {\r\n    //         elementId.push(el.Id);\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // });\r\n       booklist.forEach(x => this.books.push(x));\r\n       this.bankCtrl.setValue(this.books);\r\n       this.filteredBanks.next(this.books.slice());\r\n       this.bankFilterCtrl.valueChanges\r\n       .pipe(takeUntil(this._onDestroy))\r\n       .subscribe(() => {\r\n         this.filterBanks();\r\n       });\r\n    },\r\n  );\r\n}\r\n\r\n  ngOnInit() {\r\n    \r\n    this.getBookData();\r\n    this.CreateNewBook = this.formBuilder.group(\r\n      {\r\n        Name: ['', Validators.required],\r\n        // Author:['',Validators.required],\r\n        // PublishingYear:['',Validators.required],\r\n        ISBNNumber : this.formBuilder.array([\r\n          this.AddISBN()\r\n         ])\r\n      }\r\n    );\r\n\r\n    this.AddToExistingBooks = this.formBuilder.group(\r\n      {\r\n        //// book:['',Validators.required],\r\n        //// Id:['',Validators.required],\r\n        ISBNNumber : this.formBuilder.array([\r\n          this.AddISBN()\r\n         ])\r\n      });\r\n\r\n  }\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n  AddISBN(): FormGroup {\r\n   return this.formBuilder.group(\r\n      {\r\n      TrackNo: ['', Validators.required],\r\n      Edition: ['', Validators.required],\r\n      Author: ['', Validators.required],\r\n      PublishingYear: ['', Validators.required],\r\n      Description: ['', Validators.required]\r\n      });\r\n  }\r\n  onSubmit() {\r\n    if (this.stopSubmitOnClose) {\r\n      this.stopSubmitOnClose = false;\r\n      return;\r\n    }\r\n    this.submit = true;\r\n    this.bookService.postBook(this.CreateNewBook.value, this.fileToUpload).subscribe(\r\n      data => {\r\n        if (data) {\r\n          console.log('add success');\r\n        }},\r\n        error  => {\r\n        console.log('Error', error);\r\n        }\r\n        );\r\n  }\r\n  onExistingSubmit() {\r\n    if (this.stopSubmitOnClose) {\r\n      this.stopSubmitOnClose = false;\r\n      return;\r\n    }\r\n    console.log(this.selectedBook);\r\n    this.bookService.postExistingBook(this.AddToExistingBooks.value, this.selectedBook).subscribe(\r\n      data => {\r\n        if (data) {\r\n          console.log('add success');\r\n          //// this.dialogRef.close();\r\n        }});\r\n  }\r\n   initializeCreateNewBook() {\r\n     this.CreateNewBook.setValue({\r\n       Name: '',\r\n       // Author: '',\r\n       ISBNNumber : [{'TrackNo' : '', 'Edition' : '', 'Author' : '', 'PublishingYear': '', 'Description': '' }],\r\n       //  PublishingYear: '',\r\n     });\r\n   }\r\n  initializeAddToExistingBooksGroup() {\r\n    this.AddToExistingBooks.setValue({\r\n      //// book: '',\r\n      //// Id: '',\r\n      ISBNNumber : [{'TrackNo' : '', 'Edition' : '', 'Author' : '', 'PublishingYear': '', 'Description': '' }],\r\n    });\r\n  }\r\n  onClose() {\r\n    this.stopSubmitOnClose = true;\r\n    if (this.isNewBookAdded) {\r\n      this.CreateNewBook.reset();\r\n      this.initializeCreateNewBook();\r\n      //// this.dialogRef.close();\r\n    } else if (this.isIncreasedBooks) {\r\n      this.AddToExistingBooks.reset();\r\n      this.initializeAddToExistingBooksGroup();\r\n      //// this.dialogRef.close();\r\n    }\r\n\r\n  }\r\n  AddNew() {\r\n   this.isNewBookAdded = true;\r\n   this.isIncreasedBooks = false;\r\n   this.ngOnInit();\r\n\r\n  }\r\n  AddExisting() {\r\n    console.log(this.books);\r\n    this.isNewBookAdded = false;\r\n  this.isIncreasedBooks = true;\r\n  }\r\n  LoginPage() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n  uploadImage(event) {\r\n    this.isImageUploaded=true;\r\n        if (event.target.files && event.target.files[0]) {\r\n          var reader = new FileReader();\r\n        reader.onload = (event: ProgressEvent) => {\r\n          this.url = (<FileReader>event.target).result;\r\n        }\r\n    \r\n        reader.readAsDataURL(event.target.files[0]);\r\n      }\r\n        console.log(event);\r\n  }\r\n  protected filterBanks() {\r\n    if (!this.books) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.bankFilterCtrl.value;\r\n    if (!search) {\r\n      this.filteredBanks.next(this.books.slice());\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the banks\r\n    this.filteredBanks.next(\r\n      this.books.filter(book => book.Name.toLowerCase().indexOf(search) > -1)\r\n    );\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { CreatBookRoutingModule } from './createbook-routing.module';\r\nimport { CreateBookComponent } from './createbook.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { MatIconModule, MatFormFieldModule, MatButtonModule, MatSelectModule,MatDatepickerModule,MatInputModule } from '@angular/material';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { BookService } from 'src/app/shared/services/book.service';\r\n@NgModule({\r\n    imports: [CommonModule, CreatBookRoutingModule, PageHeaderModule,\r\n        MatIconModule,MatFormFieldModule,MatButtonModule,FormsModule,ReactiveFormsModule,MatDatepickerModule,MatInputModule,\r\n        NgxMatSelectSearchModule,MatSelectModule],\r\n    declarations: [CreateBookComponent],\r\n    providers:[BookService]\r\n})\r\nexport class CreateBookModule {}\r\n"],"sourceRoot":""}